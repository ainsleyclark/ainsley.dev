<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on ainsley.dev</title>
    <link>https://ainsley.dev/posts/</link>
    <description>Recent content in Posts on ainsley.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Wed, 01 Feb 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://ainsley.dev/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Responsibilities as a developer for optimised SEO.</title>
      <link>https://ainsley.dev/posts/optimise-seo/</link>
      <pubDate>Wed, 01 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ainsley.dev/posts/optimise-seo/</guid>
      <description>https://docs.google.com/presentation/d/1v5J1GJO6irV_4yhU9GF6r847EREBST0sLRz4nnUOsQ0/edit#slide=id.gb566807306_0_60 Go to one of your websites you have developed and turn JavaScript off, does the page still function as it should? Is all the content rendered? Do images and layouts appear correctly on the page? If the answer is no, it may be time to consider refactoring your code base to allow for a more SEO friendly website. As developers, it may be easier to use a particular framework or library or even add functionality via JavaScript, but consider the technical debt before you do.</description>
    </item>
    
    <item>
      <title>From bedroom to agency</title>
      <link>https://ainsley.dev/posts/bedroom-agency/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ainsley.dev/posts/bedroom-agency/</guid>
      <description>Insert Lead paragraph here.
Getting your first development job is hard â€“ really hard. Job offers usually require at least one year of experience for a junior position, there are tons of different languages to choose from, hundreds of boot camps, and thousands of articles and tutorials to read. All of this can be daunting when you&amp;rsquo;re first starting out.
So where do you start? In this blog post we&amp;rsquo;ll cover CV writing, portfolio building and tech busting to help you land that first dream job.</description>
    </item>
    
    <item>
      <title>What are GoLang interfaces?</title>
      <link>https://ainsley.dev/posts/golang-interfaces/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ainsley.dev/posts/golang-interfaces/</guid>
      <description>https://medium.com/rungo/interfaces-in-go-ab1601159b3a https://go.dev/doc/effective_go#interfaces https://go.dev/tour/methods/10 https://go.dev/tour/methods/9 Interfaces are a tricky subject to grasp in GoLang, let&amp;rsquo;s demystify when and how they should be used.
Interfaces are a difficult subject to grasp in GoLang, a lot of people find understanding what an interface In Go, is, and when and how they should be used effectively. They can however, be extremely powerful when used correctly and aid with unit testing your code.
What&amp;rsquo;s polymorphism? Put simply, polymorphism in programming means many types can perform the same tasks (functions).</description>
    </item>
    
  </channel>
</rss>
