// -----------------------------------------------------------------------------
// _button.scss
// This file contains all styles related to the button component.
// Ref: https://codepen.io/milanraring/pen/gOwGpdm
// -----------------------------------------------------------------------------

// Resets & Props
// =========================================================================

button,
a.btn {
	border-radius: $button-border-radius;
	cursor: pointer;
	outline: none;
	user-select: none;
	text-decoration: none;
	border: none;
}

// Element
// =========================================================================

.btn {
	$self: &;
	position: relative;
	display: inline-block;
	height: auto;
	padding: $button-padding;
	background-color: colour('foreground');
	color: colour('background');
	border: none;
	transition: transform 100ms linear, color 100ms linear, background 100ms linear;
	will-change: transform, color, background;

	// Defaults
	// =========================================================================

	&:active {
		background-color: $black;
		color: $white;

		&-text {
			color: $white;
		}

		svg path {
			stroke: $white;
			fill: $white;
		}
	}

	// Wrapper
	// =========================================================================

	&-wrapper {
		position: relative;
		display: inline-flex;
		justify-content: center;
		align-items: center;
		width: 100%;
		height: auto;
	}

	// Multiple
	// =========================================================================

	&-multiple {
		#{$self} {
			width: 100%;

			&:last-child {
				margin-top: 1rem;
			}
		}
	}

	// Text
	// =========================================================================

	&-text {
		display: inline-block;
		font-size: $button-font-size;
		font-weight: bold;
		line-height: 1;
		white-space: nowrap;
	}

	// Colours
	// =========================================================================

	&-colour {
		&-white {
			background-color: $white;
			color: $black;

			svg path {
				/* stylelint-disable-line no-descending-specificity */
				stroke: $black;
				fill: $black;
			}

			&:hover {
				color: $black;
			}

			&:active,
			&#{$self}-active {
				background-color: $black;
				color: $white;

				svg path {
					stroke: $white;
					fill: $white;
				}
			}
		}

		&-grey,
		&-black {
			background-color: $black;
			color: $white;

			svg path {
				/* stylelint-disable-line no-descending-specificity */
				stroke: $white;
				fill: $white;
			}

			&:hover {
				color: $white;
			}

			&:active,
			&#{$self}-active {
				background-color: $white;
				color: $black;

				svg path {
					stroke: $black;
					fill: $black;
				}
			}
		}

		&-grey {
			background-color: $grey-light;
		}
	}

	// Sizes
	// =========================================================================

	&-size {
		&-tiny {
			padding: $button-tiny-padding;
			font-size: $button-tiny-font-size;

			* {
				font-size: $button-tiny-font-size;
			}
		}

		&-small {
			padding: $button-small-padding;
		}

		&-large {
			padding: $button-large-padding;

			#{$self}-text {
				font-size: $button-large-font-size;
			}
		}
	}

	// Block
	// =========================================================================

	&-block {
		width: 100%;
	}

	// Max Width
	// =========================================================================

	&-max-width {
		max-width: 220px;
	}

	// Arrow
	// =========================================================================

	&-arrow {
		&-image {
			width: $button-arrow-size;
			height: $button-arrow-size;
			min-width: $button-arrow-size;
			min-height: $button-arrow-size;
			transform-style: preserve-3d;
			transform-origin: 50% 50%;
		}

		&-image,
		#{$self}-text {
			transition: transform $button-transition-time ease;
			will-change: transform;
		}

		&-left {
			position: absolute;
			top: 50%;
			left: 0;
			opacity: 0;
			transform: translate(calc(-50% - 30px), -50%) rotate(90deg);
		}

		&-right {
			position: relative;
			margin-left: 10px;
		}

		@media (hover: hover) {
			&:hover {
				#{$self}-text {
					transform: translateX(30px);
					color: inherit;
				}

				#{$self}-arrow-right {
					opacity: 0;
				}

				#{$self}-arrow-left {
					opacity: 1;
					transform: translate(0, -50%) rotate(90deg);
				}
			}
		}
	}

	// Loading
	// =========================================================================

	&-loading {
		transition: none;
		pointer-events: none;
		color: transparent !important;

		* {
			opacity: 0;
		}

		&::after {
			content: '';
			width: 1.4rem;
			height: 1.4rem;
			border: 3px solid $white;
			border-right-color: transparent !important;
			border-radius: 50%;
			display: inline-block;
			animation-duration: 0.75s;
			animation-iteration-count: infinite;
			animation-name: spinner;
			animation-timing-function: linear;
			position: absolute;
			top: 50%;
			left: 50%;
			margin-left: -0.7rem;
			margin-top: -0.7rem;
		}

		@keyframes spinner {
			0% {
				transform: rotate(0deg);
			}
			100% {
				transform: rotate(360deg);
			}
		}

		&:hover {
			box-shadow: none;
		}
	}

	// Tablet
	// =========================================================================

	@include media-tab {
		&-multiple {
			#{$self} {
				width: auto;

				&:not(:last-child) {
					margin-right: 1rem;
				}
			}
		}
	}

	// Desktop
	// =========================================================================

	@media (hover: none) {
		&[data-bookmark] {
			display: none;
		}
	}
}
